{"version":3,"sources":["configs/firebase-configs.js","configs/authMethods.js","service/auth.js","actions.js","options.js","reducer.js","store.js","service/time.js","App.js","reportWebVitals.js","index.js"],"names":["firebaseApp","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","getFirestore","auth","getAuth","facebookProvider","FacebookAuthProvider","githubProvider","GithubAuthProvider","googleProvider","GoogleAuthProvider","socialMediaAuth","provider","a","setPersistence","browserLocalPersistence","then","signInWithPopup","res","user","catch","err","LogoutButton","Button","variant","onClick","signOut","size","UserInfo","useState","username","setUsername","photo","setPhoto","onAuthStateChanged","currentUser","email","photoURL","Typography","component","gutterBottom","src","alt","style","height","LoginPage","handleOnClick","console","log","ButtonGroup","TIMER_STARTED","TIMER_PAUSED","TIMER_RESETED","LABEL_CHANGED","timerPaused","pauseTime","Date","now","type","payload","time","timerReseted","timer","labels","initialState","isPlaying","totalDuration","options","remainingTime","elapsedTime","initialStartTime","lastStartTime","interrupted","key","pomodoro","label","comment","store","createStore","state","action","actions","newElapsedTime","readRecords","q","query","collection","uid","where","Timestamp","fromDate","getDocs","docs","forEach","doc","id","data","createdTime","toDate","toString","DummyDataButton","monthIndex","month","addDoc","Math","floor","random","ReadRecordsButton","recordPomodor","getState","startTime","fromMillis","endTime","duration","TimerComponent","useSelector","dispatch","useDispatch","colors","strokeWidth","initialRemainingTime","onComplete","minutes","seconds","txt","TimerController","Box","startIcon","PomodoroLabel","Autocomplete","freeSolo","renderInput","params","TextField","onChange","event","value","TimerPage","Grid","container","justifyContent","direction","alignItems","spacing","item","sx","width","ColoredLine","color","backgroundColor","left","Home","App","Container","to","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","AppWrapper","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.77ec8c8f.chunk.js","sourcesContent":["import {initializeApp} from 'firebase/app';\nimport {getFirestore} from 'firebase/firestore';\nimport {getAuth} from 'firebase/auth';\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: 'AIzaSyDyf1hO8T29xILZPtDaZEHf8FR5EkTCHw8',\n  authDomain: 'angular-theorem-170815.firebaseapp.com',\n  databaseURL: 'https://angular-theorem-170815-default-rtdb.firebaseio.com',\n  projectId: 'angular-theorem-170815',\n  storageBucket: 'angular-theorem-170815.appspot.com',\n  messagingSenderId: '466053256382',\n  appId: '1:466053256382:web:2e08585e9cd0db7f0c3aef',\n};\n\n// Initialize Firebase\nconst firebaseApp = initializeApp(firebaseConfig);\nconst db = getFirestore(firebaseApp);\nconst auth = getAuth(firebaseApp);\n\nexport {firebaseApp, db, auth};\n","import {\n  FacebookAuthProvider,\n  GithubAuthProvider,\n  GoogleAuthProvider,\n} from 'firebase/auth';\n\nexport const facebookProvider = new FacebookAuthProvider();\nexport const githubProvider = new GithubAuthProvider();\nexport const googleProvider = new GoogleAuthProvider();\n","import React from 'react';\nimport {auth} from '../configs/firebase-configs';\nimport {\n  signInWithPopup,\n  setPersistence,\n  browserLocalPersistence,\n  onAuthStateChanged,\n} from 'firebase/auth';\nimport {\n  facebookProvider,\n  githubProvider,\n  googleProvider,\n} from '../configs/authMethods';\nimport {useState} from 'react';\nimport Button from '@mui/material/Button';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport Typography from '@mui/material/Typography';\n\nconst socialMediaAuth = async (provider) => {\n  return setPersistence(auth, browserLocalPersistence).then(() => {\n    return signInWithPopup(auth, provider).then((res) => {\n      return res.user;\n    }).catch((err) => {\n      return err;\n    });\n  }).catch((err) => {\n    return err;\n  });\n};\n\nconst isLoggedIn = () => {\n  return auth.currentUser !== null;\n};\n\n/**\n * Logout button\n * @return {React} Logout button\n */\nfunction LogoutButton() {\n  return <Button\n    variant=\"outlined\"\n    onClick={() => {\n      auth.signOut();\n    }}\n    size=\"small\"\n  >\n        Sign out\n  </Button>;\n}\n\n/**\n * Info of the logged in user\n * @return {React} email and photo of the logged in user\n */\nfunction UserInfo() {\n  const [username, setUsername] = useState('Anonymous');\n  const [photo, setPhoto] = useState('');\n\n  onAuthStateChanged(auth, () => {\n    if (auth.currentUser) {\n      setUsername(auth.currentUser.email);\n      setPhoto(auth.currentUser.photoURL);\n    } else {\n      setUsername('Anonymous');\n      setPhoto('');\n    }\n  });\n\n  return (\n    <Typography variant=\"body1\" component=\"div\" gutterBottom>\n      <img src={photo} alt={photo} style={{height: '2em'}} /> {username}\n    </Typography>\n  );\n}\n\n/**\n * Main login page\n * @return {React} The whole log in page\n */\nfunction LoginPage() {\n  const handleOnClick = (provider) => {\n    socialMediaAuth(provider).then((res) => {\n      console.log(res);\n    });\n  };\n\n  return (\n    <div>\n      <Typography variant=\"h2\" component=\"div\" gutterBottom>\n                Login\n      </Typography>\n      <ButtonGroup size=\"small\" variant=\"outlined\">\n        <Button onClick={()=>handleOnClick(facebookProvider)}>Facebook</Button>\n        <Button onClick={()=>handleOnClick(githubProvider)}>Github</Button>\n        <Button onClick={()=>handleOnClick(googleProvider)}>Google</Button>\n      </ButtonGroup>\n    </div>\n  );\n}\n\nexport {isLoggedIn, LogoutButton, UserInfo, LoginPage, auth};\n","// action types\nexport const TIMER_STARTED = 'timerStarted';\nexport const TIMER_PAUSED = 'timerPaused';\nexport const TIMER_RESTARTED = 'timerRestarted';\nexport const TIMER_RESETED = 'timerReseted';\nexport const LABEL_CHANGED = 'labelChanged';\n\n/**\n * Action function to start the timer.\n * @param {Date} time Start time.\n * @return {Dict} Resulting action with payload.\n */\nexport function timerStarted(time = Date.now()) {\n  return {\n    type: TIMER_STARTED,\n    payload: {\n      time: time,\n    },\n  };\n}\n\n/**\n * Action function to pause the timer.\n * @param {Date} pauseTime Pause time.\n * @return {Dict} Resulting action with payload.\n */\nexport function timerPaused(pauseTime = Date.now()) {\n  return {\n    type: TIMER_PAUSED,\n    payload: {\n      time: pauseTime,\n    },\n  };\n}\n\n/**\n * Action function to restart the timer.\n * @param {Date} time Reset time.\n * @return {Dict} Resulting action with payload.\n */\nexport function timerReseted() {\n  return {\n    type: TIMER_RESETED,\n  };\n}\n\n/**\n * Create action for a changed label.\n * @param {String} label The new pomodoro label.\n * @return {Dict} Resulting action with payload.\n */\nexport function labelChanged(label) {\n  return {\n    type: LABEL_CHANGED,\n    payload: {\n      label,\n    },\n  };\n}\n","const timer = {\n  totalDuration: 10, // in seconds\n};\n\nconst db = {\n  users: 'users',\n  pomodoros: 'pomodoros',\n};\n\nconst labels = [\n  'work',\n  'personal',\n];\n\nexport {timer, db, labels};\n","import * as actions from './actions';\nimport * as options from './options';\n\nconst initialState = {\n  timer: {\n    isPlaying: false,\n    totalDuration: options.timer.totalDuration, // in seconds\n    remainingTime: options.timer.totalDuration, // in seconds\n    elapsedTime: 0, // in seconds\n\n\n    initialStartTime: null, // in microseconds\n    lastStartTime: null, // in microseconds\n    pauseTime: null, // in microseconds\n\n    interrupted: false,\n\n    // The key needs to be changed everytime the timer is reseted\n    key: 0,\n  },\n\n  pomodoro: {\n    label: null,\n    comment: null,\n  },\n};\n\n/**\n * Reducer function for redux store.\n * @param {Dict} state Input store state.\n * @param {Dict} action Input action with payload.\n * @return {Dict} Resulting store state.\n */\nexport default function reducer(state = {}, action) {\n  switch (action.type) {\n    case actions.TIMER_STARTED:\n      if (state.timer.isPlaying === true) {\n        return state;\n      }\n\n      const initialStartTime = (\n        state.timer.initialStartTime===null ?\n        action.payload.time : state.timer.initialStartTime\n      );\n\n      return {\n        ...state,\n        timer: {\n          ...state.timer,\n          isPlaying: true,\n          lastStartTime: action.payload.time,\n          initialStartTime: initialStartTime,\n        },\n      };\n    case actions.TIMER_PAUSED:\n      if (state.timer.isPlaying === false) {\n        return state;\n      }\n\n      let newElapsedTime = (\n        state.timer.elapsedTime +\n        (action.payload.pauseTime - state.timer.lastStartTime) / 1000\n      );\n      newElapsedTime = (newElapsedTime <= state.timer.totalDuration ?\n        newElapsedTime : state.timer.totalDuration\n      );\n\n      return {\n        ...state,\n        timer: {\n          ...state.timer,\n          isPlaying: false,\n          lastStartTime: null,\n          pauseTime: action.payload.pauseTime,\n          remainingTime: state.timer.totalDuration - newElapsedTime,\n          elapsedTime: newElapsedTime,\n          interrupted: true,\n        },\n      };\n    case actions.TIMER_RESETED:\n      return {\n        ...state,\n        timer: {\n          ...state.timer,\n          isPlaying: false,\n          remainingTime: state.timer.totalDuration,\n          elapsedTime: 0,\n          initialStartTime: null,\n          lastStartTime: null,\n          pauseTime: null,\n          key: state.timer.key + 1,\n        },\n      };\n    case actions.LABEL_CHANGED:\n      console.log(action.payload.label);\n      return {\n        ...state,\n        pomodoro: {\n          ...state.pomodoro,\n          label: action.payload.label,\n        },\n      };\n    default:\n      return initialState;\n  }\n}\n","import {createStore} from 'redux';\nimport reducer from './reducer';\n\nconst store = createStore(reducer);\n\nexport default store;\n","import React from 'react';\nimport {\n  collection, addDoc, getDocs, query, where, Timestamp,\n} from 'firebase/firestore';\nimport {db, auth} from '../configs/firebase-configs';\nimport {CountdownCircleTimer} from 'react-countdown-circle-timer';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport {useDispatch, useSelector} from 'react-redux';\nimport * as actions from '../actions';\nimport {ButtonGroup} from '@mui/material';\nimport PlayCircleIcon from '@mui/icons-material/PlayCircle';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport TextField from '@mui/material/TextField';\nimport store from '../store';\nimport * as options from '../options';\n\nconst readRecords = () => {\n  const q = query(\n      collection(db, `users/${auth.currentUser.uid}/pomodors`),\n      where('createdTime', '>=', Timestamp.fromDate(new Date(2021, 5))),\n  );\n  getDocs(\n      q,\n  ).then((docs)=>{\n    docs.forEach((doc)=>{\n      console.log(doc.id, ' => ', doc.data().createdTime.toDate().toString());\n    });\n  }).catch((err)=>{\n    console.log('Failed to read userDoc', err);\n  });\n};\n\nconst DummyDataButton = () => {\n  const populateDummyData = () => {\n    console.log('Populating the database');\n\n    const monthIndex = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n\n    monthIndex.forEach((month)=>{\n      addDoc(collection(db, `users/${auth.currentUser.uid}/pomodors`), {\n        createdTime: Timestamp.fromDate(\n            new Date(2021, month, Math.floor(Math.random()*30)),\n        ),\n      }).then(()=>{\n        console.log('Write completed');\n      }).catch((err)=>{\n        console.log('Faile to write to database', err);\n      });\n    });\n\n    monthIndex.forEach((month)=>{\n      addDoc(collection(db, `users/user1/pomodors`), {\n        createdTime: Timestamp.fromDate(\n            new Date(2021, month, Math.floor(Math.random()*30)),\n        ),\n      });\n    });\n\n    monthIndex.forEach((month)=>{\n      addDoc(collection(db, `users/user2/pomodors`), {\n        createdTime: Timestamp.fromDate(\n            new Date(2021, month, Math.floor(Math.random()*30)),\n        ),\n      });\n    });\n  };\n\n  return (\n    <Button variant=\"outlined\" onClick={populateDummyData}>\n        Populate with dummy data\n    </Button>\n  );\n};\n\nconst ReadRecordsButton = () => {\n  return <Button variant=\"outlined\" onClick={readRecords}>Read Records</Button>;\n};\n\n/**\n * Record a pomodoro session.\n */\nfunction recordPomodor() {\n  const state = store.getState();\n\n  if (state.timer.elapsedTime <= 0) {\n    return;\n  }\n\n  const pomodoro = {\n    startTime: Timestamp.fromMillis(state.timer.initialStartTime),\n    endTime: Timestamp.fromDate(new Date()),\n    interrupted: state.timer.interrupted,\n    label: state.pomodoro.label,\n    comment: state.pomodoro.comment,\n    duration: state.timer.elapsedTime,\n  };\n\n  addDoc(\n      collection(db, `users/${auth.currentUser.uid}/pomodors`),\n      pomodoro,\n  ).then(() => {\n    console.log(pomodoro);\n  }).catch((err) => {\n    console.log('Faile to write to database', err);\n  });\n};\n\nconst TimerComponent = () => {\n  const {\n    isPlaying,\n    totalDuration,\n    remainingTime,\n    key,\n  } = useSelector((state) => state.timer);\n\n  const dispatch = useDispatch();\n\n  return (\n    <CountdownCircleTimer\n      // The key needs to be changed everytime the timer is set to restart\n      key={key}\n      isPlaying={isPlaying}\n      duration={totalDuration}\n      colors={[\n        ['#004777', 1],\n      ]}\n      strokeWidth={25}\n      initialRemainingTime={remainingTime}\n      size={300}\n      onComplete={() => {\n        dispatch(actions.timerPaused());\n        recordPomodor();\n        dispatch(actions.timerReseted());\n      }}\n    >\n      {({remainingTime}) => {\n        const minutes = Math.floor(remainingTime / 60);\n        const seconds = remainingTime % 60;\n        const txt = `${minutes}:${seconds}`;\n\n        return (\n          <Typography variant=\"h4\" component=\"div\" gutterBottom>\n            {txt}\n          </Typography>\n        );\n      }}\n    </CountdownCircleTimer>\n  );\n};\n\nconst TimerController = () => {\n  const dispatch = useDispatch();\n\n  const startTimer = () => {\n    dispatch(actions.timerStarted(Date.now()));\n  };\n\n  const resetTimer = () => {\n    dispatch(actions.timerPaused(Date.now()));\n    recordPomodor();\n    dispatch(actions.timerReseted());\n  };\n\n  const squashPomodoro = () => {\n    dispatch(actions.timerPaused(Date.now()));\n    dispatch(actions.timerReseted(Date.now()));\n  };\n\n  return (\n    <Box>\n      <ButtonGroup variant=\"outlined\">\n        <Button onClick={startTimer} startIcon={<PlayCircleIcon />}>\n          Start\n        </Button>\n        <Button onClick={resetTimer}>Reset</Button>\n        <Button onClick={squashPomodoro}>Squash</Button>\n      </ButtonGroup>\n    </Box>\n\n  );\n};\n\nconst PomodoroLabel = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <Autocomplete\n      freeSolo\n      options={options.labels}\n      renderInput={\n        (params) => <TextField {...params} label=\"Label\" />\n      }\n      onChange={(event, value)=>{\n        dispatch(actions.labelChanged(value));\n      }}\n    />\n  );\n};\n\nconst TimerPage = () => {\n  return (\n    <div>\n      <Typography variant=\"h2\" component=\"div\" gutterBottom>\n                Timer\n      </Typography>\n      <Grid\n        container\n        justifyContent=\"center\"\n        direction=\"column\"\n        alignItems=\"center\"\n        spacing={3}\n      >\n        <Grid item sx={{width: 300}}>\n          <PomodoroLabel />\n        </Grid>\n        <Grid item>\n          <TimerComponent />\n        </Grid>\n        <Grid item>\n          <TimerController />\n        </Grid>\n        <Grid item>\n          <DummyDataButton />\n          <ReadRecordsButton />\n        </Grid>\n      </Grid>\n\n    </div>\n  );\n};\n\nexport {TimerPage};\n","import React from 'react';\nimport './App.css';\nimport * as auth from './service/auth';\nimport * as time from './service/time';\nimport Container from '@mui/material/Container';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  // Redirect\n} from 'react-router-dom';\n\nconst ColoredLine = (color = 'white', height = 1) => (\n  <hr\n    style={{\n      color: color,\n      backgroundColor: color,\n      height: height,\n      width: '100%',\n      left: 0,\n    }}\n  />\n);\n\n/**\n * Main app component\n * @return {React} Main app react component.\n */\nfunction App() {\n  return (\n    <Container>\n      <Router>\n        <auth.UserInfo />\n        <auth.LogoutButton />\n        <ColoredLine />\n        <div>\n          <nav>\n            <ul>\n              <li>\n                <Link to=\"/\">Home</Link>\n              </li>\n              <li>\n                <Link to=\"/login\">Login</Link>\n              </li>\n              <li>\n                <Link to=\"/timer\">Timer</Link>\n              </li>\n            </ul>\n          </nav>\n\n          {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n          <Switch>\n            <Route path=\"/login\">\n              <auth.LoginPage />\n            </Route>\n            <Route path=\"/timer\">\n              {/* {() => {\n                return (\n                  !auth.isLoggedIn() ?\n                  <Redirect to=\"/login\" /> : <time.TimerPage />\n                );\n              }} */}\n              <time.TimerPage />\n            </Route>\n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </Container>\n  );\n}\n\n/**\n * A dummy Home page\n * @return {ReactDOM} page with react Home\n */\nfunction Home() {\n  return <h2>Home</h2>;\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store';\nimport {Provider} from 'react-redux';\n\nconst AppWrapper = () => {\n  return (\n    <Provider store={store}>\n      <App />\n    </Provider>\n  );\n};\n\nReactDOM.render(\n    <React.StrictMode>\n      <AppWrapper />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}